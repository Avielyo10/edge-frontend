import React, { useContext, useState, Suspense, useEffect } from 'react';
import { useRouteMatch } from 'react-router-dom';
import { RegistryContext } from '../../store';
import { Bullseye, Spinner } from '@patternfly/react-core';
import AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';
import { useHistory } from 'react-router-dom';
import PropTypes from 'prop-types';

const VulnerabilityTab = ({ setCVEs }) => {
  const { params } = useRouteMatch('/fleet-management/:inventoryId');
  const { getRegistry } = useContext(RegistryContext);

  return (
    <>
      <AsyncComponent
        appName="vulnerability"
        module="./SystemDetail"
        getRegistry={getRegistry}
        customIntlProvider
        entity={{ id: params.inventoryId }}
        canSelect={false}
        canEditStatus={false}
        canManageColumns={false}
        linkToCustomerPortal
        defaultColumns={[
          'synopsis',
          'public_date',
          'impact',
          'cvss_score',
          'advisory',
        ]}
        filters={[
          'filter',
          'security_rule',
          'known_exploit',
          'impact',
          'cvss_score',
          'advisory',
        ]}
        customAction={(cve) => {
          setCVEs(cve);
          return <></>;
        }}
      />
    </>
  );
};

VulnerabilityTab.propTypes = {
  imageId: PropTypes.string,
};

export default VulnerabilityTab;
